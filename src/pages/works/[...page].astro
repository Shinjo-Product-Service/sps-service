---
import Layout from '../../layouts/Layout.astro';
import Breadcrumb from '../../components/Breadcrumb.astro';
import Fv from '../../components/section/Fv.astro';
import Image from 'astro/components/Image.astro';
import type { GetStaticPathsOptions } from 'astro';
import { newtClient } from '../../lib/newt';
import type { WorksItemType } from '../../types';

export const getStaticPaths = async ({ paginate }: GetStaticPathsOptions) => {
    const {items: worksItems} = await newtClient.getContents<WorksItemType>({
        appUid: 'sps',
        modelUid: 'works',
        query: {
            // limit: 2,
            // skip: 0,
            // select: ['_id' ,'title', 'label', 'content', '_sys.updatedAt'],
            // content: {
            //     fmt: 'text',
            // }
        },
    });
    return paginate(worksItems, {pageSize: 10});
};

const { page } = Astro.props;
const pageProps = {page}

const worksList = page.data;
console.log(worksList[0].client);


// const workInformations = [
//     {
//         image: {
//             src: "/assets/images/home/work.jpg",
//             alt: "制作実績",
//             width: 1200,
//             height: 680,
//         },
//         title: "ブランディングした商品をEC機能を導入して販売",
//         client: {
//             icon: {
//                 src: "/assets/images/home/work_icon.png",
//                 width: 52,
//                 height: 36,
//             },
//             name: "泉菜株式会社"
//         },
//         info: [
//             {
//                 title: "業種",
//                 description: "農業"
//             },
//             {
//                 title: "従業員数",
//                 description: "1~10人"
//             },
//             {
//                 title: "課題",
//                 description: "商品のブランドアピール不足と販売ルートの不足"
//             },
//         ]
//     }
// ]

---

<Layout title="works">
    <main>
        <!-- FV -->
        <div class="
            flex flex-col gap-28 w-defaultLayout m-auto mt-64
            md:w-full md:gap-16 md:mt-40
        ">
            <Breadcrumb
                lists={[
                    { name: "ホーム", path: "/" },
                    { name: "実績"}
                ]}
            />
            <Fv
                titleEn="Works"
                titleJa="これまでの実績"
                description="もしあればここにそれを説明するテキストが入ってきますからね。入れるようにしておきましょうね。まあ何が入ってくるのかは全然わからないのですけれども、あればいいですね。"
            />
        </div>
        <!-- MAIN -->
        <div class="
            mt-32 mb-64
            md:mt-16 md:mb-40 md:px-[1.6rem]
        ">
            <ul class="
                grid grid-cols-3 gap-x-8 gap-y-24 w-defaultLayout m-auto
                md:grid-cols-1 md:gap-16 md:w-full
            ">
                {worksList.map((workInformation, index) => {
                const detailInformation = [
                    {
                        title: "業種",
                        description: workInformation.industry
                    },
                    {
                        title: "従業員数",
                        description: workInformation.numberOfEmployees
                    },
                    {
                        title: "課題",
                        description: workInformation.issue
                    },
                ]
                return (
                    <li class="">
                        <a href={`/works/${workInformation._id}`} class="">
                            <Image src={workInformation.thumbnail.src} alt={workInformation.thumbnail.altText} width={workInformation.thumbnail.width} height={workInformation.thumbnail.height} class="w-full" />
                            <div class="mt-8">
                                <h4 class="mb-7 pb-6 text-[1.8rem] font-mincho border-b border-lineGray">
                                    {workInformation.title}
                                </h4>
                                <div class="flex justify-center items-center gap-3 w-fit px-5 py-3 border border-lineGray rounded-full">
                                    <Image src={workInformation.client.logo.src} alt={`${workInformation.client.name}のロゴ`} width={workInformation.client.logo.width} height={workInformation.client.logo.height} class="w-[2.6rem] h-auto" />
                                    <span class="text-[1.3rem]">
                                        {workInformation.client.name}
                                    </span>
                                </div>
                                <div class="flex flex-col gap-2 mt-5">
                                    {detailInformation.map((detail, index) => {
                                        return (
                                            <dl class="grid grid-cols-[6rem_1fr] gap-8">
                                                <dt class="text-[1.3rem] text-gray">{detail.title}</dt>
                                                <dd class="text-[1.3rem]">{detail.description}</dd>
                                            </dl>
                                        )
                                    })}
                                </div>
                            </div>
                        </a>
                    </li>)
                })}

            </ul>
        </div>
    </main>
</Layout>